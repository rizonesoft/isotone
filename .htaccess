# Isotone - Root .htaccess with Safe Security Measures
# These rules are carefully chosen to enhance security without breaking functionality

# ============================================================================
# BASIC SECURITY HEADERS (Safe for all environments)
# ============================================================================
<IfModule mod_headers.c>
    # Prevent clickjacking attacks - allows same origin framing only
    Header always set X-Frame-Options "SAMEORIGIN"
    
    # Prevent MIME type sniffing - forces browser to respect Content-Type
    Header always set X-Content-Type-Options "nosniff"
    
    # Enable browser's XSS filter (for older browsers)
    Header always set X-XSS-Protection "1; mode=block"
    
    # Control referrer information - safe default
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    
    # Remove PHP version info for security
    Header always unset X-Powered-By
    
    # HTTPS Security (uncomment ONLY when SSL is properly configured)
    # Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
</IfModule>

# ============================================================================
# DIRECTORY OPTIONS
# ============================================================================
# Disable directory browsing for security
Options -Indexes

# Disable MultiViews to prevent content negotiation issues
<IfModule mod_negotiation.c>
    Options -MultiViews
</IfModule>

# ============================================================================
# URL REWRITING (Essential for Isotone routing)
# ============================================================================
<IfModule mod_rewrite.c>
    RewriteEngine On
    
    # Route all non-existing files and directories through the Router
    # This simple rule works identically on Apache, Nginx, and LiteSpeed
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteRule ^(.*)$ index.php [QSA,L]
</IfModule>

# ============================================================================
# FALLBACK ERROR HANDLING (Router handles errors, but these are backup)
# The Router will handle all error responses internally
# ============================================================================
# Note: These are kept as fallback for server-level errors
# The Router handles application-level errors
ErrorDocument 400 /isotone/index.php
ErrorDocument 401 /isotone/index.php
ErrorDocument 403 /isotone/index.php
ErrorDocument 404 /isotone/index.php
ErrorDocument 405 /isotone/index.php
ErrorDocument 408 /isotone/index.php
ErrorDocument 500 /isotone/index.php
ErrorDocument 502 /isotone/index.php
ErrorDocument 503 /isotone/index.php
ErrorDocument 504 /isotone/index.php

# ============================================================================
# PROTECT SENSITIVE FILES (Using modern Apache 2.4 syntax when available)
# ============================================================================

# Protect .env files (critical for security)
<Files ".env">
    <IfModule mod_authz_core.c>
        Require all denied
    </IfModule>
    <IfModule !mod_authz_core.c>
        Order allow,deny
        Deny from all
    </IfModule>
</Files>

# Protect composer files (contains dependency info)
<FilesMatch "^composer\.(json|lock)$">
    <IfModule mod_authz_core.c>
        Require all denied
    </IfModule>
    <IfModule !mod_authz_core.c>
        Order allow,deny
        Deny from all
    </IfModule>
</FilesMatch>

# Protect version control directories
<IfModule mod_rewrite.c>
    RewriteRule ^\.git/ - [F,L]
    RewriteRule ^\.svn/ - [F,L]
</IfModule>

# Protect documentation and config files from direct access
<FilesMatch "\.(md|yml|yaml|ini|log|bak|backup|sql)$">
    <IfModule mod_authz_core.c>
        Require all denied
    </IfModule>
    <IfModule !mod_authz_core.c>
        Order allow,deny
        Deny from all
    </IfModule>
</FilesMatch>

# ============================================================================
# PERFORMANCE OPTIMIZATIONS (Optional but safe)
# ============================================================================

# Enable compression for text files
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript
    AddOutputFilterByType DEFLATE application/javascript application/x-javascript
    AddOutputFilterByType DEFLATE application/json application/xml application/rss+xml
</IfModule>

# Set proper MIME types
<IfModule mod_mime.c>
    AddType application/javascript js
    AddType text/css css
    AddType image/svg+xml svg
    AddType application/font-woff2 woff2
    AddType application/font-woff woff
    AddType application/vnd.ms-fontobject eot
    AddType font/truetype ttf
    AddType font/opentype otf
</IfModule>

# ============================================================================
# NOTES FOR ADMINISTRATORS
# ============================================================================
# This .htaccess file uses safe, non-breaking security measures
# Additional security can be added based on your specific needs:
# 
# 1. Uncomment HSTS header when SSL is configured
# 2. Add IP-based restrictions if needed
# 3. Configure Content-Security-Policy based on your assets
# 4. Add rate limiting rules if supported by your server
#
# Always test changes in development before deploying to production
# ============================================================================